basePath: /
definitions:
  model.CreateNotification:
    properties:
      message:
        example: You have a new message
        type: string
      status:
        example: new
        type: string
      title:
        example: New Message
        type: string
    type: object
  model.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  model.MonthlyRevenue:
    properties:
      month:
        example: January
        type: string
      revenue:
        example: 100.5
        type: number
    required:
    - month
    - revenue
    type: object
  model.Notification:
    properties:
      id:
        example: 1
        type: integer
      message:
        example: You have a new message
        type: string
      status:
        example: new
        type: string
      title:
        example: New Message
        type: string
    type: object
  model.ProductRevenue:
    properties:
      id:
        example: 1
        type: integer
      product_name:
        example: Chicken Parmesan
        type: string
      profit:
        example: 7985
        type: number
      profit_margin:
        example: 15
        type: number
      revenue_date:
        example: "2024-03-28"
        type: string
      sell_price:
        example: 55
        type: number
      total_revenue:
        example: 8000
        type: number
    required:
    - product_name
    - profit
    - profit_margin
    - revenue_date
    - sell_price
    - total_revenue
    type: object
  model.RevenueByStatus:
    properties:
      revenue:
        example: 100.5
        type: number
      status:
        example: confirmed
        type: string
    required:
    - revenue
    - status
    type: object
  model.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://example.com/support
  description: API for Point Of Sale
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: App pos Team 2
  version: "1.0"
paths:
  /api/notifications:
    get:
      consumes:
      - application/json
      description: Retrieve all notifications, optionally filtered by status
      parameters:
      - description: Notification status (e.g., unread)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of notifications retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/model.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Notification'
                  type: array
              type: object
        "500":
          description: Failed to fetch notifications
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get all notifications
      tags:
      - Notification
    post:
      consumes:
      - application/json
      description: Create a new notification
      parameters:
      - description: Notification payload
        in: body
        name: notification
        required: true
        schema:
          $ref: '#/definitions/model.CreateNotification'
      produces:
      - application/json
      responses:
        "201":
          description: Notification created successfully
          schema:
            allOf:
            - $ref: '#/definitions/model.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.Notification'
              type: object
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Failed to create notification
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Create a new notification
      tags:
      - Notification
  /api/notifications/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a notification using its ID
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Notification deleted successfully
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Failed to delete notification
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Delete a notification by ID
      tags:
      - Notification
    get:
      consumes:
      - application/json
      description: Retrieve a notification by its ID
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Notification retrieved successfully
          schema:
            allOf:
            - $ref: '#/definitions/model.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.Notification'
              type: object
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Failed to fetch notification
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get a notification by ID
      tags:
      - Notification
    put:
      consumes:
      - application/json
      description: Update the status or details of a notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Notification updated successfully
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Failed to update notification
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Update a notification by ID
      tags:
      - Notification
  /api/notifications/mark-all-read:
    put:
      consumes:
      - application/json
      description: Mark all notifications as read
      produces:
      - application/json
      responses:
        "200":
          description: All notifications marked as read successfully
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "500":
          description: Failed to mark notifications as read
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Mark all notifications as read
      tags:
      - Notification
  /api/revenue/month:
    get:
      description: Get total revenue grouped by month
      produces:
      - application/json
      responses:
        "200":
          description: Fetch monthly revenue successfully
          schema:
            allOf:
            - $ref: '#/definitions/model.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.MonthlyRevenue'
                  type: array
              type: object
        "500":
          description: Failed to fetch monthly revenue
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Fetch monthly revenue
      tags:
      - Revenue
  /api/revenue/products:
    get:
      description: Get revenue details for all products
      produces:
      - application/json
      responses:
        "200":
          description: Fetch product revenues successfully
          schema:
            allOf:
            - $ref: '#/definitions/model.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.ProductRevenue'
                  type: array
              type: object
        "500":
          description: Failed to fetch product revenues
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Fetch product revenues
      tags:
      - Revenue
  /api/revenue/status:
    get:
      description: Get total revenue grouped by order status
      produces:
      - application/json
      responses:
        "200":
          description: Fetch total revenue by status successfully
          schema:
            allOf:
            - $ref: '#/definitions/model.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.RevenueByStatus'
                  type: array
              type: object
        "500":
          description: Failed to fetch total revenue by status
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Fetch total revenue by status
      tags:
      - Revenue
securityDefinitions:
  Authentication:
    in: header
    name: Authorization
    type: apiKey
  UserID:
    in: header
    name: User-ID
    type: apiKey
  UserRole:
    in: header
    name: User-Role
    type: apiKey
swagger: "2.0"
