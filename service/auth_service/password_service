package service

import (
	"errors"
	"project_pos_app/repository"

	"go.uber.org/zap"
)

type passwordService interface {
	SendPasswordResetEmail(email string) error
}

type PasswordService struct {
	Repo repository.passwordRepository
	Log  *zap.Logger
}

func NewPasswordService(repo repository.passwordRepository, log *zap.Logger) *PasswordService {
	return &PasswordService{
		Repo: repo,
		Log:  log,
	}
}

// SendPasswordResetEmail memanggil method di PasswordRepository untuk mengirim email reset password
func (ps *PasswordService) SendPasswordResetEmail(email string) error {
	// Validasi format email (untuk kesederhanaan, bisa diganti dengan validasi lebih ketat)
	if email == "" {
		ps.Log.Error("Email is required")
		return errors.New("email is required")
	}

	// Memanggil repository untuk mengirim email
	err := ps.Repo.SendPasswordResetEmail(email)
	if err != nil {
		ps.Log.Error("Failed to send password reset email", zap.Error(err))
		return err
	}

	ps.Log.Info("Password reset email sent successfully", zap.String("email", email))
	return nil
}
